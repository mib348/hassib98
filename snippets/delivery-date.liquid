<style>
  .ui-datepicker {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    z-index: 1000; /* Adjust z-index as needed */
  }
</style>

{{ '//code.jquery.com/ui/1.9.2/themes/base/jquery-ui.css' | stylesheet_tag }}
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.9.2/jquery-ui.min.js" defer="defer"></script>

<div id="datepicker"></div>
<br>
<br>
<br>

<script>
  let pageFullyLoaded = false;

document.addEventListener('DOMContentLoaded', function() {
  document.body.addEventListener('click', function(e) {
    if ((e.target.classList.contains('todayorderbtn') || e.target.classList.contains('preorderbtn')) && !pageFullyLoaded) {
      e.preventDefault(); // Prevent navigation if page hasn't fully loaded
      // Optionally, visually indicate that the link is disabled
      e.target.style.pointerEvents = 'none';
      e.target.style.opacity = '0.5';
    } else {
      // Optionally, reset visual changes if any were made
      e.target.style.pointerEvents = '';
      e.target.style.opacity = '';
    }
  });

    const buttonTodayOrder = document.querySelector('.todayorderbtn');
    const buttonPreOrder = document.querySelector('.preorderbtn');
    const strLocation = sessionStorage.getItem("location") || "";
    
    function toggleButton(startTime, endTime) {
        const now = new Date();
        
        // Use Intl.DateTimeFormat to get the correct current time in Germany
        const options = {
            timeZone: 'Europe/Berlin',
            hour: '2-digit',
            minute: '2-digit',
            second: '2-digit',
            year: 'numeric',
            month: '2-digit',
            day: '2-digit',
            hour12: false
        };
        
        const formatter = new Intl.DateTimeFormat([], options);
        const parts = formatter.formatToParts(now);
        
        let dateObj = {};
        parts.forEach(({ type, value }) => {
            dateObj[type] = value;
        });
        
        const timeGermany = new Date(`${dateObj.year}-${dateObj.month}-${dateObj.day}T${dateObj.hour}:${dateObj.minute}:${dateObj.second}`);
        
        const currentHours = timeGermany.getHours();
        const currentMinutes = timeGermany.getMinutes();
        
        const [startHours, startMinutes] = startTime.split(':').map(Number);
        let [endHours, endMinutes] = endTime.split(':').map(Number);
        
        // Adjust for end time being 00:00 (midnight)
        if (endHours === 0 && endMinutes === 0) {
            endHours = 24;
        }
        
        const currentTimeInMinutes = currentHours * 60 + currentMinutes;
        const startTimeInMinutes = startHours * 60 + startMinutes;
        const endTimeInMinutes = endHours * 60 + endMinutes;
        
        const isWithinTimeSlot = currentTimeInMinutes >= startTimeInMinutes && currentTimeInMinutes < endTimeInMinutes;
        
        if (isWithinTimeSlot) {
            buttonTodayOrder.classList.add('show-button');
        } else {
            buttonTodayOrder.classList.remove('show-button');
        }
    }
    
    if (strLocation !== "") {
        $.ajax({
            url: `https://app.sushi.catering/getLocations/${strLocation}`,
            type: "GET",
            dataType: "json",
            success: function(data) {
                // Save the same-day preorder end time
                window.samedayPreorderEndTime = data.sameday_preorder_end_time;
                window.additionalInventoryPreorderEndTime = data.additional_inventory_end_time;
                window.b_additional_inventory = data.additional_inventory;
                window.accept_only_preorders = data.accept_only_preorders;

                sessionStorage.setItem("no_station", data.no_station);
                sessionStorage.setItem("b_additional_inventory", data.additional_inventory);
              
                if (data.note)
                    $("#note").html(data.note);
              
                // Handle location_toggle state
                if (data.is_active === 'Y') {
                    //buttonTodayOrder.classList.add('show-button');
                    buttonPreOrder.classList.add('show-button');

                    if (data.start_time && data.end_time && data.is_active === 'Y' && data.accept_only_preorders === 'N') {
                        toggleButton(data.start_time, data.end_time);
                        setInterval(() => toggleButton(data.start_time, data.end_time), 60000);
                    } else if (data.error) {
                        console.error('Error fetching location time:', data.error);
                    }
                } 
                else {
                    buttonTodayOrder.classList.remove('show-button');
                    buttonPreOrder.classList.remove('show-button');
                }        
                
            },
            error: function(request, status, error) {
                console.error('Error fetching location time:', error);
            }
        });
    }
});

window.onload = function() {
    pageFullyLoaded = true;
    if (window.jQuery) {
        let $ = window.jQuery;

        $(".todayorderbtn, .preorderbtn").each(function() {
            // Reset any inline styles that might have been applied to indicate disabled state
            this.style.pointerEvents = '';
            this.style.opacity = '';
        });

        var button = $(".preorderbtn");
        var buttonOffset = button.offset();
        
        // Calculate new top and left positions
        var newTop = buttonOffset.top + button.outerHeight();
        var newLeft = buttonOffset.left;
        
        // Apply the calculated positions
        $("#datepicker").datepicker('hide');
        
        $(".todayorderbtn").click(function(e){
            e.preventDefault();
        
            var href = $(this).attr("href");
        
            // Use Intl.DateTimeFormat to get the correct current date in Germany
            const options = {
                timeZone: 'Europe/Berlin',
                year: 'numeric',
                month: '2-digit',
                day: '2-digit',
                hour12: false
            };
        
            const formatter = new Intl.DateTimeFormat([], options);
            const parts = formatter.formatToParts(new Date());
        
            let dateObj = {};
            parts.forEach(({ type, value }) => {
                dateObj[type] = value;
            });
        
            var today = `${dateObj.day}-${dateObj.month}-${dateObj.year}`;
        
            sessionStorage.setItem("date", today);
        
            $.ajax({
                url: "https://app.sushi.catering/updateSelectedDate/" + today,
                type: "GET",
                data: {"uuid": localStorage.getItem("uuid")},
                cache: false,
                async: false,
                dataType: "json",
                success: function(data) {
                    window.location.href = href + "?location=" + sessionStorage.getItem("location") + "&no_station=" + sessionStorage.getItem("no_station") + "&uuid=" + localStorage.getItem("uuid");
                },
                error: function(request, status, error) {
                    alert('Fehler beim Einstellen des ausgewÃ¤hlten Datums. Bitte versuchen Sie es nach dem Aktualisieren der Seite erneut.');
                    console.log('set selected date error: today', error);
                }
            });
        });

        $(".preorderbtn").click(function(e){
            e.preventDefault();
        
            if (window.accept_only_preorders === "Y" && (typeof window.samedayPreorderEndTime === 'undefined' || !window.samedayPreorderEndTime)) {
                console.log('Same-day preorder end time is not set. Please try again later.');
                //return;
            }
            if (window.b_additional_inventory == "Y" && (typeof window.additionalInventoryPreorderEndTime === 'undefined' || !window.additionalInventoryPreorderEndTime)) {
                  console.log('Additional Inventory end time is not set. Please try again later.');
                  //return;
            }
          
        
            // Get the current date and time in Germany
            const now = new Date();
            const options = {
                timeZone: 'Europe/Berlin',
                hour: '2-digit',
                minute: '2-digit',
                hour12: false
            };
            const formatter = new Intl.DateTimeFormat('en-GB', options); // 'en-GB' for 24-hour format
            const parts = formatter.formatToParts(now);
        
            let dateObj = {};
            parts.forEach(({ type, value }) => {
                dateObj[type] = value;
            });
        
            const currentHours = parseInt(dateObj.hour, 10);
            const currentMinutes = parseInt(dateObj.minute, 10);
        
            // Parse the same-day preorder end time
            const [cutoffHours_samedayPreorderEndTime, cutoffMinutes_samedayPreorderEndTime] = window.samedayPreorderEndTime.split(':').map(Number);
            const [cutoffHours_Additionalnventory, cutoffMinutes_Additionalnventory] = window.additionalInventoryPreorderEndTime.split(':').map(Number);
        
            // Compare current time with cutoff time
            const currentTimeInMinutes = currentHours * 60 + currentMinutes;
            const cutoffTimeInMinutes_samedayPreorderEndTime = cutoffHours_samedayPreorderEndTime * 60 + cutoffMinutes_samedayPreorderEndTime;
            const cutoffTimeInMinutes_Additionalnventory = cutoffHours_Additionalnventory * 60 + cutoffMinutes_Additionalnventory;
        
            let minDate = 0; // Default to today
            sessionStorage.setItem("additional_inventory_time", "N");
            if (currentTimeInMinutes >= cutoffTimeInMinutes_Additionalnventory && window.b_additional_inventory === "Y") {
                minDate = 1; // Set minDate to tomorrow
                sessionStorage.setItem("additional_inventory_time", "Y");
            }
            else if (currentTimeInMinutes >= cutoffTimeInMinutes_samedayPreorderEndTime && window.accept_only_preorders === "Y" && window.b_additional_inventory != "Y") {
                minDate = 1; // Set minDate to tomorrow
            }

        
            // Initialize the datepicker with the adjusted minDate
            $("#datepicker").datepicker({
                minDate: minDate,
                maxDate: '+6d',
                dateFormat: "dd-mm-yy",
                onSelect: function(dateText, inst) {
                    sessionStorage.setItem("date", dateText);
        
                    var newUrl = $(".preorderbtn").attr("href");
        
                    $.ajax({
                        url: "https://app.sushi.catering/updateSelectedDate/" + dateText,
                        type: "GET",
                        data: { "uuid": localStorage.getItem("uuid") },
                        cache: false,
                        async: false,
                        dataType: "json",
                        success: function(data) {
                            if(sessionStorage.getItem("additional_inventory_time") == "Y")
                              window.location.href = newUrl + "?location=Additional Inventory&no_station=" + sessionStorage.getItem("no_station") + "&b_additional_inventory=" + sessionStorage.getItem("b_additional_inventory") + "&additional_inventory_time=" + sessionStorage.getItem("additional_inventory_time") + "&uuid=" + localStorage.getItem("uuid");
                            else
                              window.location.href = newUrl + "?location=" + sessionStorage.getItem("location") + "&no_station=" + sessionStorage.getItem("no_station") + "&b_additional_inventory=" + sessionStorage.getItem("b_additional_inventory") + "&additional_inventory_time=" + sessionStorage.getItem("additional_inventory_time") + "&uuid=" + localStorage.getItem("uuid");
                        },
                        error: function(request, status, error) {
                            alert('Fehler beim Einstellen des ausgewÃ¤hlten Datums. Bitte versuchen Sie es nach dem Aktualisieren der Seite erneut.');
                            console.log('Set selected date error:', error);
                        }
                    });
                }
            }).datepicker('show');
            $('.ui-datepicker').addClass('notranslate');
        });
        


     }
}
</script>

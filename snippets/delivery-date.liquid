<style>
  .ui-datepicker {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    z-index: 1000; /* Adjust z-index as needed */
  }
</style>

{{ '//code.jquery.com/ui/1.9.2/themes/base/jquery-ui.css' | stylesheet_tag }}
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.9.2/jquery-ui.min.js" defer="defer"></script>

<div id="datepicker"></div>
<br>
<br>
<br>

<script>
  let pageFullyLoaded = false;

document.addEventListener('DOMContentLoaded', function() {
  document.body.addEventListener('click', function(e) {
    if ((e.target.classList.contains('todayorderbtn') || e.target.classList.contains('preorderbtn')) && !pageFullyLoaded) {
      e.preventDefault(); // Prevent navigation if page hasn't fully loaded
      // Optionally, visually indicate that the link is disabled
      e.target.style.pointerEvents = 'none';
      e.target.style.opacity = '0.5';
    } else {
      // Optionally, reset visual changes if any were made
      e.target.style.pointerEvents = '';
      e.target.style.opacity = '';
    }
  });

    const buttonTodayOrder = document.querySelector('.todayorderbtn');

    function toggleButton() {
      const now = new Date();
      const utcTime = now.getTime() + now.getTimezoneOffset() * 60000;
      const timeGermany = new Date(utcTime + (3600000 * 1)); // Germany (Central European Time) is UTC+2
      const hours = timeGermany.getHours();
      const minutes = timeGermany.getMinutes();

      if (hours < 12) {
        buttonTodayOrder.classList.remove('show-button');
      } else {
        // Enable button from 12 p.m. (noon) to midnight
        buttonTodayOrder.classList.add('show-button'); 
      }
    }

    toggleButton();

    setInterval(toggleButton, 60000);
});

  window.onload = function() {
    pageFullyLoaded = true;
      if (window.jQuery) {
        let $ = window.jQuery;

        var strLocation =
        sessionStorage.getItem("location") != null
          ? sessionStorage.getItem("location")
          : "";

        var strDate =
        sessionStorage.getItem("date") != null
          ? sessionStorage.getItem("date")
          : "";

        $(".todayorderbtn, .preorderbtn").each(function() {
          // Reset any inline styles that might have been applied to indicate disabled state
          this.style.pointerEvents = '';
          this.style.opacity = '';
        });


        var button = $(".preorderbtn");
        var buttonOffset = button.offset();

        // Calculate new top and left positions
        var newTop = buttonOffset.top + button.outerHeight();
        var newLeft = buttonOffset.left;

        // Apply the calculated positions
        //$("#datepicker").css({ position: "absolute", top: newTop - 310, left: newLeft });
        //$("#datepicker").css({ display:"none" });
        $("#datepicker").datepicker('hide');

        $(".todayorderbtn").click(function(e){
          e.preventDefault();

          var href = $(this).attr("href");
          var today = new Date();
          var dd = String(today.getDate()).padStart(2, '0');
          var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
          var yyyy = today.getFullYear();

          today = dd + '-' + mm + '-' + yyyy;

          sessionStorage.setItem("date", today);

          $.ajax({
              url:"https://app.sushi.catering/updateSelectedDate/" + today,
              type:"GET",
              data:{"uuid":localStorage.getItem("uuid")},
              cache:false,
              async:false,
              dataType:"json",
              success:function(data){
                console.log(data);
                window.location.href = href + "?location=" + sessionStorage.getItem("location") + "&uuid=" + localStorage.getItem("uuid");
              },
              error: function (request, status, error) {
                  alert('set selected date error: today ');
                  console.log('set selected date error: today ',  error);
              }
          });

        });

        $(".preorderbtn").click(function(e){
            e.preventDefault();

            $("#datepicker").datepicker({
                minDate: 0,
                maxDate: '+6d',
                dateFormat: "dd-mm-yy",
                onSelect: function(dateText, inst) {
                    sessionStorage.setItem("date", dateText);

                    var newUrl = $(".preorderbtn").attr("href");

                    $.ajax({
                    	url:"https://app.sushi.catering/updateSelectedDate/" + dateText,
                    	type:"GET",
                        data:{"uuid":localStorage.getItem("uuid")},
                    	cache:false,
                        async:false,
                    	dataType:"json",
                    	success:function(data){
                          console.log(data);
                          // Redirect the user to the new URL or handle it as needed
                          window.location.href = newUrl + "?location=" + sessionStorage.getItem("location") + "&uuid=" + localStorage.getItem("uuid");
                        },
                        error: function (request, status, error) {
                            alert('set selected date error: preorder ');
                            console.log('set selected date error: preorder ',  error);
                        }
                    });

                }
            }).datepicker('show');
            $('.ui-datepicker').addClass('notranslate');
        });

        // Remove the HTML element if the time condition is met
        if (isTimeBetween()) {
            //$('.todayorderbtn').remove();
        }

        $(function() {


        });
    }

    // Function to get current time in Germany
    function getCurrentTimeInGermany() {
        const options = { timeZone: 'Europe/Berlin', hour: '2-digit', minute: '2-digit', hour12: false };
        const formatter = new Intl.DateTimeFormat([], options);
        return formatter.format(new Date());
    }

    // Function to check if current time is between 11:30 AM and 12:00 AM
    function isTimeBetween() {
        const currentTime = getCurrentTimeInGermany();
        const currentHoursMinutes = currentTime.split(':').map(Number); // Convert "HH:MM" to [HH, MM]

        // Convert times to minutes for easier comparison
        const currentTimeInMinutes = currentHoursMinutes[0] * 60 + currentHoursMinutes[1];
        const start = 11 * 60 + 30; // 11:30 AM in minutes
        const end = 11 * 60 + 59; // 11:59 AM in minutes

        return currentTimeInMinutes >= start && currentTimeInMinutes <= end;
    }
  }
</script>
